<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
  "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title></title>
  <link href="../Styles/Style.css" rel="stylesheet" type="text/css" />
</head>

<body>
  <h2 id="5-3-">5.3　串的比较</h2>

  <p>两个数字，很容易比较大小。2比1大，这完全正确，可是两个字符串如何比较？比如“silly”、“stupid”这样的同样表达“愚蠢的”的单词字符串，它们在计算机中的大小其实取决于它们挨个字母的前后顺序。它们的第一个字母都是“s”，我们认为不存在大小差异，而第二个字母，由于“i”字母比“t”字母要靠前，所以“i”&lt;“t”，于是我们说“silly”&lt;“stupid”。</p>

  <p>事实上，串的比较是通过组成串的字符之间的编码来进行的，而字符的编码指的是字符在对应字符集中的序号。</p>

  <p>计算机中的常用字符是使用标准的ASCII编码，更准确一点，由7位二进制数表示一个字符，总共可以表示128个字符。后来发现一些特殊符号的出现，128个不够用，于是扩展ASCII码由8位二进制数表示一个字符，总共可以表示256个字符，这已经足够满足以英语为主的语言和特殊符号进行输入、存储、输出等操作的字符需要了。可是，单我们国家就有除汉族外的满、回、藏、蒙古、维吾尔等多个少数民族文字，换作全世界估计要有成百上千种语言与文字，显然这256个字符是不够的，因此后来就有了Unicode编码，比较常用的是由16位的二进制数表示一个字符，这样总共就可以表示2</p>

  <p>16个字符，约是6.5万多个字符，足够表示世界上所有语言的所有字符了。当然，为了和ASCII码兼容，Unicode的前256个字符与ASCII码完全相同。</p>

  <p>所以如果我们要在C语言中比较两个串是否相等，必须是它们串的长度以及它们各个对应位置的字符都相等时，才算是相等。即给定两个串：s="a<sub>1</sub>a<sub>2</sub>......a<sub>n</sub>"，t="b<sub>1</sub>b<sub>2</sub>......b<sub>m</sub>"，当且仅当n=m，且a<sub>1</sub>=b<sub>1</sub>，a<sub>2</sub>=b<sub>2</sub>，……，a<sub>n</sub>=b<sub>m</sub>时，我们认为s=t。</p>

  <p>那么对于两个串不相等时，如何判定它们的大小呢。我们这样定义：</p>

  <p>给定两个串：s="a<sub>1</sub>a<sub>2</sub>......a<sub>n</sub>"，t="b<sub>1</sub>b<sub>2</sub>......b<sub>m</sub>"，当满足以下条件之一时，s&lt;t。</p>

  <p>1．n&lt;m，且a<sub>i</sub>=b<sub>i</sub>（i=1，2，……，n）。</p>

  <p>例如当s=“hap”，t=“happy”，就有s&lt;t。因为t比s多出了两个字母。</p>

  <p>2．存在某个k≤min（m，n），使得a<sub>i</sub>=b<sub>i</sub>（i=1，2，……，k-1），a<sub>k</sub>&lt;b<sub>k</sub>。</p>

  <p>例如当s="happen"，t="happy"，因为两串的前4个字母均相同，而两串第5个字母（k值），字母e的ASCII码是101，而字母y的ASCII码是121，显然e&lt;y，所以s&lt;t。</p>

  <p>有同学如果对这样的数学定义很不爽的话，那我再说一个字符串比较的应用。</p>

  <p>我们的英语词典，通常都是上万个单词的有序排列。就大小而言，前面的单词比后面的要小。你在查找单词的过程，其实就是在比较字符串大小的过程。</p>

  <p><img alt="" src="../Images/5-3-1.jpg" /></p>

  <p>图5-3-1</p>

  <p>嗯？有同学说，从不查纸质词典，都是用电子词典。电子词典查找单词实现的原理，其实就是字符串这种数据结构的典型应用，随着我们之后的讲解，大家就会明白。</p>
</body>
</html>
